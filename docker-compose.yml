services:
  app:
    build: .
    container_name: inspirtag-api
    restart: unless-stopped
    working_dir: /var/www/html
    env_file:
      - .env
    volumes:
      - ./:/var/www/html
      - ./docker/php.ini:/usr/local/etc/php/conf.d/custom.ini
    ports:
      - "9000:9000"
    extra_hosts:
      - "host.docker.internal:host-gateway"  # This allows Docker to access host MySQL
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - redis
    networks:
      - inspirtag-network

  # REMOVE the mysql service completely - comment it out or delete it
  # mysql:
  #   image: mysql:8.0
  #   ...

  redis:
    image: redis:7-alpine
    container_name: inspirtag-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - inspirtag-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  queue:
    build: .
    container_name: inspirtag-queue
    restart: unless-stopped
    working_dir: /var/www/html
    command: php artisan queue:work --tries=3 --timeout=30
    env_file:
      - .env
    volumes:
      - ./:/var/www/html
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - redis
    networks:
      - inspirtag-network

  scheduler:
    build: .
    container_name: inspirtag-scheduler
    restart: unless-stopped
    working_dir: /var/www/html
    command: php artisan schedule:work
    env_file:
      - .env
    volumes:
      - ./:/var/www/html
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - redis
    networks:
      - inspirtag-network

  nginx:
    image: nginx:alpine
    container_name: inspirtag-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - inspirtag-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  # Remove mysql_data volume since we're not using Docker MySQL
  redis_data:

networks:
  inspirtag-network:
    driver: bridge
